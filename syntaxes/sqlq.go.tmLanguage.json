{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SQLQ Markup Language for Golang",
	"patterns": [
		{
			"include": "#struct-meta"
		},
		{
			"match": "#!sqlq\\/(v[0-9\\.]+):(\\w+)",
			"captures": {
				"0": {
					"name": "comment.line.percentage.header.sqlq"
				},
				"1": {
					"name": "constant.character.escape.header.version.sqlq"
				},
				"2": {
					"name": "entity.name.type.header.type.sqlq"
				}
			}
		},
		{
			"include": "#u2-tag"
		},
		{
			"include": "#header-tag"
		}
	],
	"repository": {
		"struct-meta-commas": {
			"match": ",",
			"name": "keyword.operator.struct-meta.comma.sqlq"
		},
		"struct-meta-comment-block": {
			"begin": "/\\*",
			"beginCaptures": {
				"0": {
					"name": "comment.block.struct-meta.comment.begin.sqlq"
				}
			},
			"end": "\\*/",
			"endCaptures": {
				"0": {
					"name": "comment.block.struct-meta.comment.end.sqlq"
				}
			},
			"name": "comment.block.struct-meta.sqlq"
		},
		"struct-meta-escapes": {
			"patterns": [
				{
					"match": "\\\\[0-9a-fA-F]{1,6}",
					"name": "constant.character.escape.struct-meta.codepoint.sqlq"
				},
				{
					"begin": "\\\\$\\s*",
					"end": "^(?<!\\G)",
					"name": "constant.character.escape.struct-meta.newline.sqlq"
				},
				{
					"match": "\\\\.",
					"name": "constant.character.escape.struct-meta.sqlq"
				}
			]
		},
		"struct-meta-value-symbol": {
			"patterns": [
				{
					"match": "(true|false)",
					"name": "constant.language.struct-meta.constant.sqlq"
				},
				{
					"match": "\\$(\\w+)",
					"name": "variable.other.struct-meta.linked.sqlq"
				}
			]
		},
		"struct-meta-string": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "string.quoted.double.struct-meta.string.begin.sqlq"
						}
					},
					"end": "\"|(?<!\\\\)(?=$|\\n)",
					"endCaptures": {
						"0": {
							"name": "string.quoted.double.struct-meta.string.end.sqlq"
						}
					},
					"name": "string.quoted.double.struct-meta.sqlq",
					"patterns": [
						{
							"begin": "(?:\\G|^)(?=(?:[^\\\\\"]|\\\\.)+$)",
							"end": "$",
							"name": "invalid.illegal.struct-meta.unclosed.string.sqlq",
							"patterns": [
								{
									"include": "#struct-meta-escapes"
								}
							]
						},
						{
							"include": "#struct-meta-escapes"
						},
						{
							"include": "#struct-meta-value-symbol"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "string.quoted.single.struct-meta.string.begin.sqlq"
						}
					},
					"end": "'|(?<!\\\\)(?=$|\\n)",
					"endCaptures": {
						"0": {
							"name": "string.quoted.single.struct-meta.string.end.sqlq"
						}
					},
					"name": "string.quoted.single.struct-meta.sqlq",
					"patterns": [
						{
							"begin": "(?:\\G|^)(?=(?:[^\\\\']|\\\\.)+$)",
							"end": "$",
							"name": "invalid.illegal.struct-meta.unclosed.string.sqlq",
							"patterns": [
								{
									"include": "#struct-meta-escapes"
								}
							]
						},
						{
							"include": "#struct-meta-escapes"
						},
						{
							"include": "#struct-meta-value-symbol"
						}
					]
				}
			]
		},
		"struct-meta-property-values": {
			"patterns": [
				{
					"include": "#struct-meta-commas"
				},
				{
					"include": "#struct-meta-comment-block"
				},
				{
					"include": "#struct-meta-escapes"
				},
				{
					"include": "#struct-meta-string"
				},
				{
					"include": "#struct-meta-value-symbol"
				}
			]
		},
		"struct-meta": {
			"begin": "sqlq:\"",
			"end": "\"",
			"patterns": [
				{
					"include": "#struct-meta-comment-block"
				},
				{
					"include": "#struct-meta-escapes"
				},
				{
					"name": "keyword.operator.struct-meta.body.sqlq",
					"begin": "(@|\\w){",
					"end": "}",
					"beginCaptures": {
						"1": {
							"name": "storage.type.struct-meta.name.sqlq"
						}
					},
					"patterns": [
						{
							"begin": "(?<![-a-zA-Z])(?=[-a-zA-Z])",
							"end": "$|(?![-a-zA-Z])",
							"name": "entity.name.type.struct-meta.property-name.sqlq"
						},
						{
							"begin": "(:)\\s*",
							"beginCaptures": {
								"1": {
									"name": "keyword.operator.struct-meta.separator.sqlq"
								}
							},
							"end": "\\s*(;)|\\s*(?=}|\\))",
							"endCaptures": {
								"1": {
									"name": "keyword.operator.struct-meta.rule.sqlq"
								}
							},
							"patterns": [
								{
									"include": "#struct-meta-comment-block"
								},
								{
									"include": "#struct-meta-property-values"
								}
							]
						},
						{
							"match": ";",
							"name": "keyword.operator.struct-meta.rule.sqlq"
						}
					]
				}
			]
		},
		"header-tag": {
			"name": "keyword.operator.tag-header.sqlq",
			"begin": "<(\\w+):(?::|:(\\w+|@)|(\\w+))(?=[^a-zA-Z0-9])",
			"end": "(?:\\/>|(?<=<)\\/(\\1):(?::|:(\\2)|(\\3))>)",
			"beginCaptures": {
				"1": {
					"name": "entity.name.tag.tag-head.sqlq"
				},
				"2": {
					"name": "entity.name.function.tag-head.name.binding.sqlq"
				},
				"3": {
					"name": "keyword.operator.tag-head.name.sqlq"
				}
			},
			"endCaptures": {
				"1": {
					"name": "entity.name.tag.tag-foot.sqlq"
				},
				"2": {
					"name": "entity.name.function.tag-foot.name.binding.sqlq"
				},
				"3": {
					"name": "keyword.operator.tag-foot.name.sqlq"
				}
			},
			"patterns": [
				{
					"begin": ">",
					"end": "<",
					"patterns": [
						{
							"include": "#u2-tag"
						}
					]
				},
				{
					"include": "#tag-body"
				}
			]
		},
		"tag-body": {
			"name": "keyword.operator.tag-body.sqlq",
			"patterns": [
				{
					"begin": "\\[",
					"end": "\\]",
					"patterns": [
						{
							"name": "entity.name.type.index.sqlq",
							"match": "[^\\]]+"
						}
					]
				},
				{
					"begin":"\\{",
					"end": "\\}",
					"patterns": [
						{
							"include": "#tag-metas"
						}
					]
				}
			]
		},
		"tag-metas": {
			"begin": "([^\\s>:]+)(?:(?:\\s|)>(?:\\s|)([\\w]+)|)\\:",
			"beginCaptures": {
				"1": {
					"name": "entity.other.attribute-name.key.sqlq"
				},
				"2": {
					"name": "entity.name.section.alias.sqlq"
				}
			},
			"end": "[;\n]",
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"match": ":([^;\\n\\s\"]+)",
					"name": "variable.other.value.binding.sqlq"
				},
				{
					"include": "#u2-tag"
				}
			]
		},
		"u2-tag": {
			"name": "keyword.operator.u2.wrapper.sqlq",
			"begin":"__(?=[^\\s]*?__)",
			"end": "__",
			"patterns": [
				{
					"match": "(?!\\W{1,2})([^\\s]*?)(?=__)",
					"captures": {
						"1": {
							"name": "string.quoted.single.u2.body.sqlq"
						}
					}
				},
				{
					"match": "(?:\\W{1,2})([^\\s]*?)(?=__)",
					"captures": {
						"1": {
							"name": "variable.other.u2.body.binding.sqlq"
						}
					}
				}
			]
		},
		"u2-tag-highlight": {
			"name": "entity.other.attribute-name.u2.wrapper.highlight.sqlq",
			"begin":"__(?=[^\\s]*?__)",
			"end": "__",
			"patterns": [
				{
					"match": "(?!\\W{1,2})([^\\s]*?)(?=__)",
					"captures": {
						"1": {
							"name": "entity.name.type.u2.body.highlight.sqlq"
						}
					}
				},
				{
					"match": "(?:\\W{1,2})([^\\s]*?)(?=__)",
					"captures": {
						"1": {
							"name": "variable.other.u2.body.binding.highlight.sqlq"
						}
					}
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.sqlq",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"include": "#u2-tag-highlight"
				}
			]
		}
	},
	"scopeName": "source.sqml.go",
	"injectionSelector": "L:string.quoted.raw.go"
}
